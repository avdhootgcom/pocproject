@{
    ViewBag.Title = "FileUpload";
}
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>File upload</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Dashboard_1","Dashboards")">Home</a>
            </li>
            <li>
                <a>PCS</a>
            </li>
            <li class="active">
                <strong>File upload</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>
<div class="wrapper wrapper-content animated fadeIn">
   
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>File Upload</h5>
                   
                </div>
                <div class="ibox-content">
                    <div class="fileinput fileinput-new input-group" data-provides="fileinput">
                        <div class="form-control" data-trigger="fileinput"><i class="glyphicon glyphicon-file fileinput-exists"></i> <span class="fileinput-filename"></span></div>
                        <span class="input-group-addon btn btn-default btn-file"><span class="fileinput-new">Select file</span><span class="fileinput-exists">Change</span><input type="file" name="..."></span>
                        <a href="#" class="input-group-addon btn btn-default fileinput-exists" data-dismiss="fileinput">Remove</a>
                    </div>
                   
                </div>
            </div>
        </div>
       
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-title">
                    <h5>Dropzone</h5>
                </div>
                <div class="ibox-content">
                    <form action="#" class="dropzone" id="dropzoneForm">
                        <div class="fallback">
                            <input name="file" type="file" multiple />
                        </div>
                    </form> 
                    <div class="row">
                        <label class="col-lg-2 control-label" style="margin-top: 15px">File Type:</label>
                        <div class="col-lg-3" style="margin-top: 15px">
                            <select class="select2_demo_1 form-control">
                                <option value="0">Select</option>
                                <option value="1">Type 1</option>
                                <option value="2">Type 2</option>
                            </select>
                        </div>
                    </div>
                    <div class="row" style="margin-top:15px">
                        <div class="col-lg-2 control-label">
                            <label for="FirstName"></label>
                        </div>
                        <div class="col-lg-3">
                            <button type="button" class="btn btn-primary">Upload</button>
                            <button type="button" class="btn btn-primary" style="margin-left:5px">Cancel</button>
                        </div>
                    </div>              
                </div>
            </div>
        </div>
       
    </div>
    
</div>

@section Styles {
    @Styles.Render("~/Content/plugins/dropzone/dropZoneStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/codeEditorStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/dropZone")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/codeEditor")

    <script type="text/javascript">
        Dropzone.options.dropzoneForm = {
            paramName: "file", // The name that will be used to transfer the file
            maxFilesize: 2, // MB
            dictDefaultMessage: "<strong>Drop files here or click to upload. </strong></br> (Selected files are not actually uploaded.)"
        };

        $(document).ready(function () {

            var editor_one = CodeMirror.fromTextArea(document.getElementById("code1"), {
                lineNumbers: true,
                matchBrackets: true
            });

            var editor_two = CodeMirror.fromTextArea(document.getElementById("code2"), {
                lineNumbers: true,
                matchBrackets: true
            });

            var editor_two = CodeMirror.fromTextArea(document.getElementById("code3"), {
                lineNumbers: true,
                matchBrackets: true
            });

        });
    </script>
}